{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCACGC,G,EAAK;AACjB,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,mBAAOH,GAAP;AACD;;;8BAEGI,G,EAAK;AAAA;;AACP,mBAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADD,EAEJM,IAFI,CAEC,UAACN,GAAD;AAAA,qBAASA,IAAIQ,IAAJ,EAAT;AAAA,aAFD,CAAP;AAGD;;;+BAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAE,gBAAgB,kBAAlB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAIJH,IAJI,CAIC,UAACN,GAAD;AAAA,qBAAS,OAAKO,aAAL,CAAmBP,GAAnB,CAAT;AAAA,aAJD,CAAP;AAKD","file":"HttpService.js","sourcesContent":["export class HttpService {\n  _handleErrors(res) {\n    if (!res.ok) throw new Error(res.statusText);\n    return res;\n  }\n\n  get(url) {\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then((res) => res.json());\n  }\n\n  post(url, dado) {\n    return fetch(url, {\n      headers: { \"Content-type\": \"application/json\" },\n      method: \"post\",\n      body: JSON.stringify(dado),\n    }).then((res) => this._handleErrors(res));\n  }\n}\n"]}