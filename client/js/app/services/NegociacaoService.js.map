{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","objeto","Date","data","quantidade","valor","catch","erro","console","log","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","conexao","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService'\nimport {ConnectionFactory} from './ConnectionFactory'\nimport {NegociacaoDao} from '../dao/NegociacaoDao'\nimport {Negociacao} from \"../models/Negociacao\"\n\n\n\nexport class NegociacaoService {\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  obterNegociacoesDaSemana() {\n    return this._http\n      .get(\"negociacoes/semana\")\n      .then((negociacoes) => {\n        return negociacoes.map(\n          (objeto) =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\"Não foi possível obter as negociações da semana\");\n      });\n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n    return this._http\n      .get(\"negociacoes/anterior\")\n      .then((negociacoes) => {\n        return negociacoes.map(\n          (objeto) =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\n          \"Não foi possível obter as negociações da semana anterior\"\n        );\n      });\n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n    return this._http\n      .get(\"negociacoes/retrasada\")\n      .then((negociacoes) => {\n        return negociacoes.map(\n          (objeto) =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\n          \"Não foi possível obter as negociações da semana retrasada\"\n        );\n      });\n  }\n\n  obterNegociacoes() {\n    return Promise.all([\n      this.obterNegociacoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada(),\n    ])\n      .then((periodos) => {\n        let negociacoes = periodos\n          .reduce((dados, periodo) => dados.concat(periodo), [])\n          .map(\n            (dado) =>\n              new Negociacao(new Date(dado.data), dado.quantidade, dado.valor)\n          );\n\n        return negociacoes;\n      })\n      .catch((erro) => {\n        throw new Error(erro);\n      });\n  }\n\n  cadastra(negociacao) {\n    return ConnectionFactory.getConnection()\n      .then((conexao) => new NegociacaoDao(conexao))\n      .then((dao) => dao.adiciona(negociacao))\n      .then(() => \"Negociação adicionada com sucesso\")\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\"Não foi possível adicionar a negociação\");\n      });\n  }\n\n  lista() {\n    return ConnectionFactory.getConnection()\n      .then((conexao) => new NegociacaoDao(conexao))\n      .then((dao) => dao.listaTodos())\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\"Não foi possível obter as negociações\");\n      });\n  }\n\n  apaga() {\n    return ConnectionFactory.getConnection()\n      .then((conexao) => new NegociacaoDao(conexao))\n      .then((dao) => dao.apagaTodos())\n      .then(() => \"Negociações apagadas com sucesso\")\n      .catch((erro) => {\n        console.log(erro);\n        throw new Error(\"Não foi possível apagar as negociações\");\n      });\n  }\n\nimporta(listaAtual) {\n\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente => \n                        negociacao.isEquals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar negociações para importar');\n            })\n    }\n    \n}\n"]}